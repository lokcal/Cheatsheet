# To list every process on the system:
ps aux

# To list a process tree
ps axjf

# To list every process owned by foouser:
ps -aufoouser

# To list every process with a user-defined format:
ps -eo pid,user,command

# Exclude grep from your grepped output of ps.
# Add [] to the first letter. Ex: sshd -> [s]shd
ps aux | grep '[h]ttpd'

# serch for pattern (ignore grep displaying command process)
ps auwx | grep xxx | grep -v grep

# List all running processes including the full command string:
ps auxww

# Search for a process that matches a string:
ps aux | grep string

# Search for a process with hierarchy
ps auxf

# List all processes of the current user in extra full format:
ps --user $(id -u) -F

# List all processes of the current user as a tree:
ps --user $(id -u) f

# Get the parent PID of a process:
ps -o ppid= -p pid

# Sort processes by memory consumption:
ps --sort size

# To find out how long a process (program or application) has been running,
ps -eo pid,comm,etime

# To find out how long a process (program or application) has been running Example processes
ps -eo pid,comm,etime | grep "process_name"

# alternativ to ps -a
pgrep brave
